package cse247class1;

public class coin {

	public static void main(String[] args) {

		int coin1[] = { 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 12 };
		int coin2[] = {10,11,12,13,14,15,16,17,18,19,20};
		
		int[] merged = concatenate(coin1,coin2);
		return;
		// int sum = 0;
		// for (int i = 0; i < coins.length; i++) {
		// sum = sum + coins[i];
		// }
		//int sum = 0;

		//sum = coins.length;
		//System.out.print(sum);
		// // TODO Auto-generated method stub
		// int coins[] = {1,2,5};
		//
		// int money = 10+1;
		// int ways[] = new int[money];
		//
		// ways[coins[0]]=1;
		// ways[0]=0;
		// // for(int i=0;i<coins[coins.length-1];i++){
		// // ways[i]=-1;
		// // }
		// //
		// // for (int i=0;i<coins.length;i++){
		// // ways[coins[0]]=1;
		// // }
		//
		// for (int i=coins[0]+1;i<money;i=i+1){
		// for(int j= 0;j<coins.length;j++){
		// int remainder = i-coins[j];
		// if(remainder>=0&&ways[remainder]!=0){
		// ways[i]=ways[remainder]+ways[i];
		// }
		// }
		// }
		// for(int i = 0;i<ways.length;i++){
		// System.out.println(ways[i]);
		// }
	}

	static int LoopSum(int[] array) {
		int sum = 0;

		for (int index = 0; index < array.length; index++) {
			sum = sum + array[index];
		}

		return sum;
	}

	static int WhileSum(int[] array) {
		int sum = 0;
		int index = 0;

		while (index < array.length) {
			sum = sum + array[index];
			++index;
		}

		return sum;
	}

	static int RecursionSum(int index, int[] array) {
		if (index < array.length) {

			return array[index] + RecursionSum(index + 1, array);
		} else {
			return 0;
		}
	}

	static int[] concatenate(int[] array1, int[] array2) {

		int[] mergedArray = new int[array1.length + array2.length];
		
		if (array1.length > array2.length){
			for (int index = 0; index < array2.length; ++index) {
				mergedArray[index * 2] = array1[index];
			}
			for (int index = 0; index < array2.length; ++index) {
				mergedArray[index * 2 + 1] = array2[index];
			}
			for (int index = array2.length ;index<array1.length;++index){
				mergedArray[array2.length+index] = array1[index];
			}
		}else if (array1.length < array2.length){
			for (int index = 0; index < array1.length; ++index) {
				mergedArray[index * 2] = array1[index];
			}
			for (int index = 0; index < array1.length; ++index) {
				mergedArray[index * 2 + 1] = array2[index];
			}
			for (int index = array1.length ;index<array2.length;++index){
				mergedArray[array1.length+index] = array2[index];
			}
		}else{
			for (int index = 0; index < array1.length; ++index) {
				mergedArray[index * 2] = array1[index];
			}
			for (int index = 0; index < array2.length; ++index) {
				mergedArray[index * 2 + 1] = array2[index];
			}
		}
		

		return mergedArray;
	}
}
